/*
2_2. ​Вычислить площадь выпуклого n-­угольника, заданного координатами своих вершин. Вначале вводится количество вершин, затем последовательно целочисленные координаты всех вершин в порядке обхода против часовой стрелки.
n < 1000, координаты < 10000.
Указание. Для вычисления площади n-­угольника можно посчитать сумму ориентированных площадей трапеций под каждой стороной многоугольника.
*/

#include <cstdio>
using  namespace std;

double calculate(int ** input, int size) {
    double result1 = 0, result2 = 0;
    for (int i = 0; i < size - 1; i++) {
        result1 += input[i][0] * input[i + 1][1];
    }
    result1 += input[size - 1][0] * input[0][1];
    for (int i = 0; i < size - 1; i++) {
        result2 += input[i][1] * input[i + 1][0];
    }
    result2 += input[size - 1][1] * input[0][0];
    return (result2 - result1) / 2;
}

int main() {
    int count = 0, n = 0;
    scanf("%d", &count);
    int ** coordinates = new int *[count];
    for (int i = 0; i < count; i++)
        coordinates[i] = new int[2];
    while (n < count) {
        scanf("%d %d", &coordinates[n][0], &coordinates[n][1]);
        n++;
    }
    printf("%g", calculate(coordinates, count));
    for (int i = 0; i < count; i++)
        delete[] coordinates[i];
    delete[] coordinates;
    return 0;
}

